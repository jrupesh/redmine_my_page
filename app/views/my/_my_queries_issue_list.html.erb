<% query = IssueQuery.find_by_id(query_id)
   if !query.nil?

    query_issues_count = query.issue_count
    query_issue_count_by_group = query.issue_count_by_group
    param_hash = query.project_id.nil? ? { :query_id => query_id } : { :project_id => query.project_id, :query_id => query_id }

    if query_limit.to_i > 0
      sort_array = query.sort_criteria.empty? ? [['id', 'desc']] : query.sort_criteria
      sort_init(sort_array)
      sort_update(query.sortable_columns,"Query-#{query.id}-#{sort_array.flatten.join("")}")
      query.sort_criteria = sort_criteria.to_a
      query_issues = query.issues(:include => [:assigned_to, :tracker, :priority, :category, :fixed_version, :status, :project],
                                :order => sort_clause,
                                :limit => query_limit.to_i)
    %>
    <h3>
      <%= "#{l(:label_query)} : " %><%= link_to "#{query.name}", issues_path( param_hash ) %> (<%= "#{query_issues_count}" %>)
    </h3>
    <%= render :partial => 'issues/list', :locals => { :issues => query_issues, 
                                                              :@query => query, 
                                                              :query => query, 
                                                              :@issue_count_by_group => query_issue_count_by_group } %>
  <% else %>
    <div>
      <%= "#{l(:label_query)} : " %><%= link_to "#{query.name}", issues_path( param_hash ) %> (<%= "#{query_issues_count}" %>)
    </div>
  <% end %>

  <% content_for :header_tags do %>
  <%= auto_discovery_link_tag(:atom,
                              {:controller => 'issues', :action => 'index', :set_filter => 1,
                               :query_id => query_id, :format => 'atom', :key => User.current.rss_key},
                              {:title => l(:label_query) + " : #{query.name}"}) %>
  <% end %>
<% end %>